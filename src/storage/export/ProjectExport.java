package storage.export;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import autoEval.gui.GUI;
import org.json.simple.JsonArray;
import org.json.simple.JsonObject;
import popupMenus.NumberChooser;
import responses.answers.Page;
import storage.export.project.AutoEvalProjectByteGenerator;
import util.QuestionBoundList;

/**
 * Used to storage.export the data supplied as an AutoEval project
 * @author Christopher
 * @see Export
 */
public class ProjectExport extends Export{
	private ArrayList<File> fileSource;
	private QuestionBoundList questionBoundList;
	private byte questionCount;

	/**
	 * Create a new project export
	 * @param r The pages to write the responses to
	 * @param fileSource The source files to save
	 * @param questionBounds the list of question bounds
	 * @param numChooser the number chooser to save
	 */
	public ProjectExport(ArrayList<Page> r, ArrayList<File> fileSource, QuestionBoundList questionBounds, NumberChooser numChooser) 
	{
		super(r);
		this.fileSource = fileSource;
		this.questionBoundList = questionBounds;
		questionCount = numChooser.getValue();
	}

	/**
	 * This method writes the generated bytes to a file.
	 * Information on the AutoEvalProject file format
	 * byte 1 is written as the question count.
	 * @param path The path to save the file at
	 * @throws IOException
	 */
	public void saveExport(String path) throws IOException
	{
		File output = new File(path);

		GUI.statusLabel.setStatus("Writing.");

		FileWriter writer = new FileWriter(output);

		AutoEvalProjectByteGenerator gen = new AutoEvalProjectByteGenerator(fileSource, questionBoundList, questionCount);

		writer.write(gen.getChars());

		writer.close();

		GUI.statusLabel.setStatus("Done.");

	}
}
